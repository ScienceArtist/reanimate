(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,n,t){e.exports=t(36)},23:function(e,n,t){},24:function(e,n,t){},36:function(e,n,t){"use strict";t.r(n);var a=t(0),i=t.n(a),o=t(11),r=t.n(o),s=(t(23),t(2)),m=t(12),l=t(13),c=t(16),u=t(14),h=t(1),d=t(17),g=(t(24),t(15)),$=t.n(g),w=(t(33),t(34),t(35),[{name:"Examples",programs:[{name:"LaTeX Draw",code:'animation :: Animation\nanimation =\n    bg `sim` (autoReverse $ drawText `andThen` fillText)\n  where\n    bg = mkAnimation 0 $ emit (mkBackground "black")\n    msg = "\\\\sum_{k=1}^\\\\infty {1 \\\\over k^2} = {\\\\pi^2 \\\\over 6}"\n    glyphs = center $ latexAlign msg\n    fillText = mkAnimation 1 $ do\n      s <- signal 0 1\n      emit $ scale 5 $ withFillColor "white" $ withFillOpacity s glyphs\n    drawText = mkAnimation 2 $ do\n      s <- signal 0 1\n      emit $ scale 5 $\n        withStrokeColor "white" $ withFillOpacity 0 $ withStrokeWidth (Num 0.1) $\n          partialSvg s glyphs'},{name:"LaTeX Color",code:'animation :: Animation\nanimation = mkAnimation 1 $ do\n    emit $ mkBackground "black"\n    emit $ withStrokeWidth (Num 0.2) $\n      withStrokeColor "white" $\n      withSubglyphs [0] (withFillColor "blue") $\n      withSubglyphs [1] (withFillColor "yellow") $\n      withSubglyphs [2] (withFillColor "green") $\n      withSubglyphs [3] (withFillColor "red") $\n      withSubglyphs [4] (withFillColor "darkslategrey") $\n      svg\n  where\n    svg = scale 10 $ center $ latex "\\\\LaTeX"'},{name:"LaTeX Basic",code:'animation :: Animation\nanimation = autoReverse $ mkAnimation 2 $ do\n    s <- signal 0 1\n    emit $ mkGroup\n      [ mkBackground "black"\n      , withStrokeColor "white" $ withFillOpacity 0 $ withStrokeWidth (Num 0.1) text\n      , withFillColor "white" $ withFillOpacity s text ]\n  where\n    text = scale 4 $ center $ latexAlign\n      "\\\\sum_{k=1}^\\\\infty {1 \\\\over k^2} = {\\\\pi^2 \\\\over 6}"'},{name:"Bounding boxes",code:'animation :: Animation\nanimation = bg `sim`\n    mapA (translate (-50) 0) bbox1 `sim`\n    mapA (translate 50 0) bbox2\n  where\n    bg = mkAnimation 0 $ emit $ mkBackground "black"\n\nbbox1 :: Animation\nbbox1 = mkAnimation 5 $ do\n    s <- signal 0 1\n    emit $ mkGroup\n      [ mkBoundingBox $ rotate (360*s) svg\n      , withFillColor "white" $ rotate (360*s) svg ]\n  where\n    svg = scale 3 $ center $ latexAlign "\\\\sum_{k=1}^\\\\infty"\n\nbbox2 :: Animation\nbbox2 = autoReverse $ mkAnimation 2.5 $ do\n  s <- signal 0 1\n  emit $ mkGroup\n    [ mkBoundingBox $ partialSvg s heartShape\n    , withStrokeColor "white" $ withFillOpacity 0 $ partialSvg s heartShape ]\n\nmkBoundingBox :: Tree -> Tree\nmkBoundingBox svg = withStrokeColor "red" $ withFillOpacity 0 $\n    mkRect (S.Num x, S.Num y) (S.Num w) (S.Num h)\n  where\n    (x, y, w, h) = boundingBox svg\n\nheartShape =\n    center $ rotateAroundCenter 225 $ mkPathString\n      "M0.0,40.0 v-40.0 h40.0a20.0 20.0 90.0 0 1 0.0,40.0a20.0 20.0 90.0 0 1 -40.0,0.0 Z"'},{name:"Morphwave",code:'animation :: Animation\nanimation = autoReverse $ mkAnimation 2.5 $ do\n    morph <- signal 0 1\n    emit $ mkBackground "black"\n    emit $ withStrokeColor "white" $ translate (-320/2) (-180/2) $ mkGroup\n      [ translate 30 50  $ mkLinePath wave1\n      , translate 30 130 $ mkLinePath wave2\n      , translate 30 90  $ mkLinePath $ morphPath wave1 wave2 morph\n      , mkLine (Num 30, Num 10) (Num 30, Num 170)\n      , mkLine (Num 30, Num 90) (Num 290, Num 90) ]\n  where\n    freq = 3; width = 260\n    wave1 = approxFnData 100 $ \\idx -> (idx*width, sin (idx*pi*2*freq) * 20)\n    wave2 = approxFnData 100 $ \\idx -> (idx*width, sin (idx*pi*2*(freq*3)) * 20)'},{name:"Morphwave Circle",code:'animation :: Animation\nanimation = autoReverse $ mkAnimation 2.5 $ do\n    idx <- signal 0 1\n    emit $ mkBackground "black"\n    emit $ withStrokeColor "white" $ translate (-320/2) (-180/2) $ mkGroup\n      [ translate 30 90 $ mkLinePath $ morphPath circle wave1 idx\n      , mkLine (Num 30, Num 10) (Num 30, Num 170)\n      , mkLine (Num 30, Num 90) (Num 290, Num 90) ]\n  where\n    freq = 5; width = 260; radius = 50\n    wave1 = approxFnData 100 $ \\idx -> (idx*width, sin (idx*pi*2*freq) * 20)\n    circle = approxFnData 100 $ \\idx ->\n      (cos (idx*pi*2+pi/2)*radius + width/2, sin (idx*pi*2+pi/2)*radius)'},{name:"Progress meters",code:'animation :: Animation\nanimation =\n    bg `sim` labels `sim`\n    mapA (translate (-100) 0)  (adjustSpeed 1.0 progressMeter) `simLoop`\n    mapA (translate 0 0) (adjustSpeed 2.0 progressMeter) `simLoop`\n    mapA (translate 100 0) (adjustSpeed 0.5 progressMeter)\n  where\n    bg = mkAnimation 0 $ emit $ mkBackground "black"\n    labels = mkAnimation 0 $ emit $ translate 0 70 $ withFillColor "white" $ mkGroup\n      [ translate (-100) 0 $ scale 2 $ center $ latex "1x"\n      , translate 0 0      $ scale 2 $ center $ latex "2x"\n      , translate 100 0    $ scale 2 $ center $ latex "0.5x"\n      ]\n\nprogressMeter :: Animation\nprogressMeter = mkAnimation 3 $ do\n  h <- signal 0 100\n  emit $ center $ mkGroup\n    [ withStrokeColor "white" $ withStrokeWidth (Num 2) $ withFillOpacity 0 $\n        mkRect (Num 0, Num 0) (Num 30) (Num 100)\n    , withFillColor "white" $\n        mkRect (Num 0, Num 0) (Num 30) (Num h) ]'},{name:"Valentine",code:'animation :: Animation\nanimation =\n    all_red `before`\n    ( background `sim`\n      (backgroundDelay `before`\n       foldr1 sim [ pause p `before` fallingLove x | (p, x) <- falling ]\n     ) `sim`\n      (heart_ani `before` heart_disappear) `sim`\n      (pause 5 `before` message ai)\n    )\n  where\n    falling = [(6.4, 0.09), (4.9, 0.12), (4.5, 0.88), (0.3, 0.43), (5.3, 0.93)\n              ,(0.1, 0.80), (1.1, 0.39), (2.3, 0.21), (2.9, 0.77), (3.4, 0.46)\n              ,(6.2, 0.19), (5.9, 0.53), (3.2, 0.14), (7.7, 0.99) ]\n    ai = center $ xelatex "\u7231"\n    all_red = mkAnimation 1 $ emit $ mkBackground "red"\n    background = mkAnimation 2 $ do\n      n <- round <$> signal 0 0xFF\n      emit $ mkBackgroundPixel $ PixelRGBA8 0xFF n n 0xFF\n    backgroundDelay = pause (duration background-1)\n    heart_ani = repeatAnimation 10 $ mkAnimation 1 $ do\n      n <- oscillate $ signalSCurve 2 0.9 1.1\n      mapF (scale n) $ drawHeart\n    heart_disappear = mkAnimation 3 $ do\n      n  <- signal 0.9 10\n      mapF (scale n) drawHeart\n    fallingLove xPos = mkAnimation 2 $ do\n      n <- signal (-100) 100\n      o <- oscillate $ signal (-1) 1\n      emit $ scale 2 $ withFillColor "red" $\n        translate ((xPos*2-1)*60) n $ rotate (45*o) ai\n    message txt = mkAnimation 1 $ do\n      o <- oscillate $ signal 0 1\n      n <- oscillate $ signalSCurve 2 0.9 1.1\n      emit $ scale n $ scale 2 $ withFillColor "white" $ withFillOpacity o txt\n\n    drawHeart = emit $ withFillColor "red" $ heartShape\n\nheartShape =\n    center $ rotateAroundCenter 225 $ mkPathString\n      "M0.0,40.0 v-40.0 h40.0a20.0 20.0 90.0 0 1 0.0,40.0a20.0 20.0 90.0 0 1 -40.0,0.0 Z"'}]}]),p=function(e){function n(e){var t;Object(m.a)(this,n),(t=Object(c.a)(this,Object(u.a)(n).call(this,e))).connect=function(){var e=new WebSocket("wss://reanimate.clozecards.com:9160");e.onopen=function(n){t.setState(function(e){return Object(s.a)({},e,{message:"Connected."})}),e.send(t.state.program)},e.onclose=function(e){t.setState(function(e){return Object(s.a)({},e,{message:"Disconnected."})}),setTimeout(t.connect,1e3)},e.onmessage=function(e){if("Success!"===e.data)console.log("Success");else if("Compiling"===e.data)t.setState({message:"Compiling..."});else if("Rendering"===e.data)t.setState({message:"Rendering..."}),t.nFrames_new=0,t.svgs_new=[];else if("Done"===e.data)t.setState({message:"Success!"}),console.log("Done"),t.nFrames=t.nFrames_new,t.svgs=t.svgs_new,t.nFrames_new=0,t.svgs_new=[],t.start=Date.now();else if(e.data.startsWith("Error"))console.log("Error"),t.setState({message:e.data.substring(5)});else{t.setState({message:"Rendering: ".concat(t.nFrames_new)}),t.nFrames_new++;var n=document.createElement("div");n.innerHTML=e.data,t.svgs_new.push(n)}},t.setState(function(n){return Object(s.a)({},n,{socket:e,message:"Connecting..."})})},t.onLoad=function(e){setTimeout(function(){e.resize()},0)},t.onChange=function(e){t.setState({program:e}),t.timeout&&clearTimeout(t.timeout);var n=t.state.socket,a=Object(h.a)(t);t.timeout=setTimeout(function(){console.log("change",e),a.setState(function(e){return Object(s.a)({},e,{message:"Compiling..."})}),n.send(e)},500)},t.selectPreset=function(e){t.onChange(e.target.value)},t.state={program:w[0].programs[0].code},setTimeout(t.connect,0),t.nFrames_new=0,t.svgs_new=[],t.nFrames=0,t.svgs=[],t.start=Date.now();var a=Object(h.a)(t);return requestAnimationFrame(function e(){var n=Date.now(),i=a.nFrames,o=Math.round((n-t.start)/1e3*60)%i;if(i){for(;a.svg.firstChild;)a.svg.removeChild(a.svg.firstChild);a.svg.appendChild(a.svgs[o])}else a.svg.innerText="Loading...";requestAnimationFrame(e)}),t}return Object(d.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e=this,n=this.state,t=n.message,a=n.program;return i.a.createElement("div",{className:"App"},i.a.createElement("div",null,i.a.createElement("select",{onChange:this.selectPreset},w.map(function(e,n){return i.a.createElement("optgroup",{key:n,label:e.name},e.programs.map(function(e,n){return i.a.createElement("option",{value:e.code,key:n},e.name)}))})),i.a.createElement("a",{className:"home",href:"https://github.com/Lemmih/reanimate"},"Return to GitHub page.")),i.a.createElement("div",{className:"editor"},i.a.createElement($.a,{mode:"haskell",width:"100%",height:"100%",theme:"monokai",fontSize:16,name:"UNIQUE_ID_OF_DIV",value:a,onLoad:this.onLoad,onChange:this.onChange,focus:!0,editorProps:{$blockScrolling:!0}})),i.a.createElement("div",{className:"controls"}),i.a.createElement("div",{className:"viewer"},i.a.createElement("div",{ref:function(n){return e.svg=n}}),i.a.createElement("div",{className:"messages"},i.a.createElement("pre",null,t))))}}]),n}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(p,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[18,1,2]]]);
//# sourceMappingURL=main.9f207bf2.chunk.js.map